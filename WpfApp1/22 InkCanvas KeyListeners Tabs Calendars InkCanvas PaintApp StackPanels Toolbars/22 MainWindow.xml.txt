<!--************ MainWindow.xaml **************-->
<!-- x:Class defines what code handles events -->
<!-- You can define the title, size, whether it can resize,
    Whether it automatically resizes for content, whether
    it stays on top, whether it starts minimized or maximized,
    and an icon
    below is the namespace and the height and width of our window-->
<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="WPF Tutorial" Height="350" Width="525" ResizeMode="CanResize" SizeToContent="WidthAndHeight" Topmost="False" WindowState="Normal"
        Icon="./Resources/RobotRods16.ico" MouseMove="Window_MouseMove">

    <!-- You can store data as a resource and reuse it by adding this
    xmlns:sys="clr-namespace:System;assembly=mscorlib" -->
    <Window.Resources>
        <sys:String x:Key="strHelloAgain">Hello Again</sys:String>

        <!-- You can define default styling of
        components -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>
    </Window.Resources>
    <Grid>

        <!-- Calendar Lesson  You can add more tabs by right clicking
        the top of the tabs and select Add Tab -->

        <!-- Drag in TabControl, to top left, pull tabItems into place, side by side
        rename tabItem to Calendar, right click , in the tab area, and add TabItem, click on 2nd tab item
        and rename to Draw.  Highliight Calendar Tab and drag in Calendar from ToolBox, and adjust.  
        Drag in a textBox, close off Calendar with a </Calendar>-->
        <TabControl HorizontalAlignment="Left" Width="Auto" Height="Auto"  Margin="-4,0,0,0" VerticalAlignment="Top" MinHeight="319" MinWidth="521" >
            <TabItem Header="Calendar">
                <Grid Background="#FFE5E5E5">
                    <!---Give the Calendar a name, add Background color, DislayMode month year or decade,
                     add a DisplayDateStart and end DisplayDateEnd, define first day of the week, 
                    define if current day is highlighted, define another selected date changed to be highlighted as an event handler -->
                    <Calendar Name="MyCalendar" HorizontalAlignment="Left" Margin="10,12,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.237,0.479"
                              Background="AliceBlue" DisplayMode="Month" DisplayDateStart="1/1/2021" DisplayDateEnd="1/31/2021" FirstDayOfWeek="Monday"
                              IsTodayHighlighted="True" SelectedDatesChanged="MyCalendar_SelectedDatesChanged" >

                        <!-- x-out certain dates-->
                        <Calendar.BlackoutDates>
                            <CalendarDateRange Start="1/2/2021" End="1/3/2021"></CalendarDateRange>
                        </Calendar.BlackoutDates>
                        <!--Reference SelectedDatesChanged to add the dates-->
                        <Calendar.SelectedDates>
                            <sys:DateTime>1/25/2021</sys:DateTime>
                        </Calendar.SelectedDates>
                    </Calendar>
                </Grid>
            </TabItem>
            <!-- give the textbox a name-->
            <TextBox Name="tbDateSelected" HorizontalAlignment="Left" Height="23" Margin="200,44,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="120"/>


            <!-- Draw Lesson KeyUp catches any key presses -->
            <TabItem Header="Draw" KeyUp="DrawPanel_KeyUp" >
                <!--We will change this from a <GridPanel Background="#FFE5E5E5"/> to a <StackPanel.../> 
                Click on the Document Outline Tab, find [TabItem] Draw and expand it to find 'GridP' 
                and right click on it and choose change layout type and choose 'StackPanel'  -->
                <StackPanel Background="#FFE5E5E5" RenderTransformOrigin="0.513,0.986">
                    <!--- Give the toolbar a Name and set Height, next highlight the toolbar then go into properties box and in 
                    Commom ->'Items' click the button next to (collections) 
                    and add 3 radio buttonsfor Common -> Content name them Draw,
                    Erase, and Select Set border brush RGB
                    to 210 each and change width to 80 and height
                    to 50 
                    Select all buttons with Shift and then change
                    the GroupName in properties to DrawGroup 
                    Tools -> 'choose Toolbox items' -> Choose-> WPF Items ->
                    put a check next to InkCanvas 
                    Drag an InkCanvas on your tab 
                    Add the same click event name to radio buttons:
                    DrawButton_Click, buttons get there own Click names: Click="SaveButton_Click", Click="OpenButton_Click"
                    drag inkCanvas in from toolBox and drag to edges-->
                    <ToolBar Name="DrawingToolbar" Height="50">
                        <RadioButton Background="#FFDEDEDE" Content="Draw" Click="DrawButton_Click" Height="50" Width="80" GroupName="DrawGroup"/>
                        <RadioButton Background="#FFDEDEDE" Content="Erase" Click="DrawButton_Click" Height="50" Width="80" GroupName="DrawGroup"/>
                        <RadioButton Background="#FFDEDEDE" Content="Select" Click="DrawButton_Click" Height="50" Width="80" GroupName="DrawGroup"/>
                        <Button Background="#FFDEDEDE" Content="Save" Height="50" Width="80" Click="SaveButton_Click"/>
                        <Button Background="#FFDEDEDE" Content="Open" Height="50" Width="80" Click="OpenButton_Click"/>
                    </ToolBar>
                    <!--give ink canvas a name-->
                    <InkCanvas Name="DrawingCanvas" Height="244">
                        <!-- define default attributes for InkCanvas -->
                        <InkCanvas.DefaultDrawingAttributes>
                            <DrawingAttributes x:Name="strokeAttr" Width="3" Height="3"
                                               Color="Black"/>
                        </InkCanvas.DefaultDrawingAttributes>
                    </InkCanvas>
                </StackPanel>
            </TabItem>
            <TabItem Header="TabItem" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="54">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
        </TabControl>



    </Grid>
</Window>
